<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatbot</title>
    <style>
    .typing {
    border-right: .15em solid #F31260; /* Cursor simulando la escritura */
    white-space: normal; /* Permite que el texto se ajuste a múltiples líneas */
    overflow: hidden;
    display: inline-block;
}

</style>

</head>

<body>
    <div class="container-sm rectangulo">
        <div class="row">
            <div class="chat-header">
                <img src="/images/01chatbot.png" alt="" class="img-fluid" width="160">
            </div>
            <div class="chat-messages" id="chat-messages">
                <div class="message bot-message">
                    El chatbot puede cometer errores. Por favor verifique las respuestas.
                </div>
                <!-- Los mensajes serán insertados aquí -->
            </div>
            <div class="chat-input form-control">
                <form id="message-form" class="row g-3">
                    <div class="col-md-6">
                        <input type="text" id="message-input" class="form-control form-control-sm "
                            placeholder="Escribe un mensaje..." />
                    </div>
                    <div class="col-md-6">
                        <button type="submit" class="btn btn-warning">Enviar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('message-form');
    const input = document.getElementById('message-input');
    const chatMessages = document.getElementById('chat-messages');
    const alergiasData = JSON.parse('{{alergiasData}}'.replace(/&quot;/g, '"'));
    console.log(JSON.stringify(alergiasData));
    const productosData = JSON.parse('{{productosData}}'.replace(/&quot;/g, '"'));
    console.log(JSON.stringify(productosData));
    const valoracionesData = JSON.parse('{{valoracionesData}}'.replace(/&quot;/g, '"'));
    console.log(JSON.stringify(valoracionesData));


    
    const dulces = [
        {"nombre": "carlos v", "categoria": ["chocolates"], "alergenos": ["chocolate", "lacteo", "soya"]},
        {"nombre": "bocadin", "categoria": ["chocolates", "biscochos"], "alergenos": ["cacahuate", "gluten", "lacteo", "soya", "chocolate"]},
        {"nombre": "gansito", "categoria": ["chocolates", "biscochos"], "alergenos": ["soya", "gluten", "lacteo", "chocolate"]},
        {"nombre": "mamut", "categoria": ["chocolates", "biscochos"], "alergenos": ["soya", "gluten", "lacteo", "chocolate"]},
        {"nombre": "kisses", "categoria": ["chocolates"], "alergenos": ["soya", "lacteo", "chocolate"]},
        {"nombre": "paleta payaso", "categoria": ["paletas", "bombones", "chocolates"], "alergenos": ["soya", "lacteo"]},
        {"nombre": "freskas", "categoria": ["chocolates"], "alergenos": ["soya", "gluten", "lacteo"]},
        {"nombre": "mancha t", "categoria": ["gomitas"], "alergenos": ["gluten"]},
        {"nombre": "panditas", "categoria": ["gomitas"], "alergenos": []},
        {"nombre": "picafresa", "categoria": ["gomitas", "picoso", "caramelo suave"], "alergenos": []},
        {"nombre": "nerds", "categoria": ["caramelo suave"], "alergenos": []},
        {"nombre": "aciduladito", "categoria": ["caramelo suave", "tipicos"], "alergenos": ["soya"]},
        {"nombre": "crunch", "categoria": ["chocolates"], "alergenos": ["soya", "gluten", "lacteo", "chocolate"]},
        {"nombre": "reeses", "categoria": ["chocolates", "biscochos"], "alergenos": ["soya", "cacahuate", "lacteo", "chocolate"]},
        {"nombre": "mazapan", "categoria": ["polvoroso"], "alergenos": ["cacahuate"]},
        {"nombre": "dragonzitos", "categoria": ["polvoroso", "picoso"], "alergenos": ["soya"]},
        {"nombre": "alegria san martin", "categoria": ["polvoroso", "tipicos"], "alergenos": []},
        {"nombre": "lucas muecas chamoy", "categoria": ["polvoroso", "picoso", "paletas"], "alergenos": ["soya"]},
        {"nombre": "lucas polvos chamoy", "categoria": ["polvoroso", "picoso"], "alergenos": []},
        {"nombre": "chipileta", "categoria": ["polvoroso", "picoso","paletas"], "alergenos": []},
        {"nombre": "bubulubu", "categoria": ["bombones", "chocolates"], "alergenos": ["lacteo", "soya"]}
    ];


        

    const saludos = [
        "¡Hola! Soy Doneet ¿En qué puedo ayudarte hoy?",
        "Buen día, soy doneet ¿cómo puedo asistirte?",
        "¡Saludos! Soy Doneet, estoy aquí para ayudarte, ¿qué necesitas?",
        "Hola, bienvenido a Doneet, ¿cómo puedo servirte hoy?"

    ];

    const nointencion = [
        "No puedo entender tu solicitud ya que no tiene nada que ver con la pagina.",
        "Parece que tu pregunta no se relaciona con el tema que estamos tratando en la pagina.",
        "Tu pregunta parece fuera de contexto con respecto a la pagina.",
        "No logro ver la conexión entre tu pregunta y Doneet",
        "Tu solicitud parece no tener relación con lo que estamos tratando en esta página."
    ];

    const cantidadDulces = [
    {"categoria": "chocolates", "cantidad": 22},
    {"categoria": "biscochos", "cantidad": 5},
    {"categoria": "gomitas", "cantidad": 10},
    {"categoria": "paletas", "cantidad": 6},
    {"categoria": "caramelo suave", "cantidad": 24},
    {"categoria": "picoso", "cantidad": 9},
    {"categoria": "tipicos", "cantidad": 13},
    {"categoria": "bombones", "cantidad": 15},
    {"categoria": "polvorosos", "cantidad": 6},
    {"categoria": "chicles", "cantidad": 6}
];

const funcionamiento = [
    "En Doneet, tú indicas a qué eres alérgico y se te recomienda un dulce que puedes consumir similar al dulce que buscabas, además de brindarte información sobre alergias.",
    "En la plataforma Doneet, especificas tus alergias alimentarias y te sugieren opciones de dulces que puedes disfrutar sin problemas, además de proporcionarte información valiosa sobre alergias.",
    "La aplicación Doneet te permite indicar tus alergias o intolerancias, y en base a eso, te recomienda alternativas de postres que puedes consumir sin riesgos, complementando con datos informativos sobre las alergias.",
    "Cuando utilizas Doneet, debes ingresar los alimentos a los que eres alérgico, y el sistema te brindará recomendaciones de golosinas similares que sí puedes comer, junto con información educativa sobre las alergias.",
    "En el sitio web Doneet, introduces tus alergias alimentarias, y te ofrecen sugerencias de dulces seguros para ti, además de proveerte con información relevante acerca de las alergias."
];



    form.addEventListener('submit', function (event) {
        event.preventDefault();
        const message = input.value;
        if (message) {
            displayUserMessage(message);
            input.value = '';
            consultarWitAi(message).then(responseJson => {
                console.log(JSON.stringify(responseJson));
                manejarIntenciones(responseJson).then(respuesta => {
                    mostrarRespuesta([respuesta]);
                });
            }).catch(error => {
                console.error('Error al hacer la solicitud:', error);
                mostrarRespuesta(['Hubo un error al procesar tu solicitud.']);
            });
        }
    });

    function displayUserMessage(message) {
        const newMessage = document.createElement('div');
        newMessage.className = 'message user-message';
        newMessage.textContent = message;
        chatMessages.appendChild(newMessage);
    }

    function consultarWitAi(textoUsuario) {
        const witUrl = `https://api.wit.ai/message?v=20240506&q=${encodeURIComponent(textoUsuario)}`;
        const witHeaders = {
            'Authorization': 'Bearer ALBCDCYN4JTUU4QX2UMIJZUQTB77GGJH',
            'Content-Type': 'application/json',
        };
        return fetch(witUrl, {
            headers: witHeaders
        }).then(response => response.json());
    }

    async function manejarIntenciones(respuestaWit) {
        if (!respuestaWit.intents || respuestaWit.intents.length === 0) {
            const respuestaNointencion = nointencion[Math.floor(Math.random() * nointencion.length)];
            return respuestaNointencion;
        }
        const intencion = respuestaWit.intents[0].name;
        const alergenosEvitar = respuestaWit.entities['alergeno:alergeno'] ? respuestaWit.entities['alergeno:alergeno'].map(a => a.value) : [];
        console.log(alergenosEvitar);
        const nombreDulce = respuestaWit.entities['nombre_dulce:nombre_dulce'] ? respuestaWit.entities['nombre_dulce:nombre_dulce'][0].value : null;
        console.log(nombreDulce);
        const categoria = respuestaWit.entities['categoria_dulce:categoria_dulce'] ? respuestaWit.entities['categoria_dulce:categoria_dulce'][0].value : null;
        console.log(categoria);
        const gradoAlergia = respuestaWit.entities['grado_alergia:grado_alergia'] ? respuestaWit.entities['grado_alergia:grado_alergia'][0].value : null;
        console.log(gradoAlergia);
        const alergenoEspecifico = respuestaWit.entities['alergeno:alergeno'] ? respuestaWit.entities['alergeno:alergeno'][0].value : null;
        const accion = respuestaWit.entities['accion:accion'] ? respuestaWit.entities['accion:accion'][0].value : null;
        const faqDefinicion = respuestaWit.entities['faq_definicion:faq_definicion'] ? respuestaWit.entities['faq_definicion:faq_definicion'][0].value : null;
        console.log(faqDefinicion);

        if (intencion === "buscar_dulce") {
            if (nombreDulce && alergenosEvitar.length) {
                return buscarPorDulceYAlergeno(nombreDulce, alergenosEvitar);
            } else if (nombreDulce && !alergenosEvitar.length && !categoria) {
                return buscarAlternativasPorDulce(nombreDulce);
            } else if (alergenosEvitar.length && !nombreDulce && !categoria) {
                return buscarPorAlergeno(alergenosEvitar);
            } else if (categoria && alergenosEvitar.length) {
                return buscarPorCategoriaYAlergeno(categoria, alergenosEvitar);
            } else if (!nombreDulce && !alergenosEvitar.length && categoria){
                console.log("Entro aqui");
                let categoriaArray = ['chocolate'];
                return buscarPorAlergeno(categoriaArray);
            } else {
                return "Pregunta incompleta. Asegúrate de proporcionar categoria, alergeno o dulce del que quieres obtener un sustituto.";
            }
            
            } else if (intencion === "consultar_alergeno") {
            if (nombreDulce){
                return listarAlergenos(nombreDulce);
            } else{
                return "Pregunta incompleta. Asegúrate de proporcionar el dulce del que quieres obtener información.";
            }
            
            } else if (intencion === "saludo") {
            const respuestaSaludo = saludos[Math.floor(Math.random() * saludos.length)];
            return respuestaSaludo;
            
            } else if (intencion === "estadistica_alergia") {
            if (gradoAlergia){
                return estadisticaAlergia(gradoAlergia, alergiasData); 
            }else if (alergenoEspecifico){
                return estadisticaAlergiaAlergeno(alergenoEspecifico, alergiasData);
            }else if (categoria){
                return estadisticaAlergiaAlergeno("chocolate", alergiasData);
            }else{
                return "Pregunta incompleta. Asegúrate de ser mas especifico en los datos que quieres obtener.";
            }
            
            } else if (intencion == "estadistica_dulce"){
            if (gradoAlergia){
                return estadisticaDulce(gradoAlergia, productosData);
            } else if (nombreDulce){
                return estadisticaDulceEspecifico(nombreDulce, productosData);
            }else{
                return "Pregunta incompleta. Asegúrate de ser mas especifico en los datos que quieres obtener.";
            }
            } else if (intencion == "estadistica_valoracion"){
                if (gradoAlergia){
                    return estadisticaValoracion(gradoAlergia, valoracionesData);
                }
                else if (nombreDulce){
                    return estadisticaValoracionEspecifico(nombreDulce, valoracionesData);
                }
                else{
                    return "Pregunta incompleta. Asegúrate de ser mas especifico en los datos que quieres obtener.";
                }
            } else if (intencion == "cantidad_dulces"){
                /*if (categoria){
                    return cantidadDulcesCategoria(categoria);
                }else{
                    return cantidadDulcesTotal();
                }*/
                return "Hay alrededor de 300 dulces en Doneet, entre todas nuestras categorías.";
            } else if (intencion == "funcionamiento"){
                const respuestaFuncionamiento = funcionamiento[Math.floor(Math.random() * funcionamiento.length)];
                return respuestaFuncionamiento;
            } else if (intencion == "instruccion"){
                if (accion == "registro"){
                    return "Para registrarte en Doneet, busca el botón de registro en la barra superior. Llena el formulario con tus datos personales e indica los ingredientes a los cual eres alergico.";
                } else if (accion == "inicio sesion"){
                    return "Para iniciar sesión en Doneet, busca el botón de inicio de sesión en la barra superior. Ingresa tu correo electrónico y contraseña para acceder a tu cuenta.";
                } else {
                    return "No pude entender tu solicitud.";
                }
            } else if (intencion == "faq"){
                if (faqDefinicion == "alergeno"){
                    return "Un alérgeno es una sustancia que puede causar una reacción alérgica. En el caso de los alimentos, los alérgenos son proteínas que el sistema inmunológico identifica como dañinas, lo que provoca una respuesta alérgica. Ejemplos comunes incluyen el huevo, la leche, el cacahuate y la soya. Fuente: Mayo Clinic, \"Food Allergies,\" Mayo Foundation for Medical Education and Research, 2020. [Online]. Available: https://www.mayoclinic.org/diseases-conditions/food-allergy/symptoms-causes/syc-20355095";
                } else if (faqDefinicion == "sintomas"){
                    return "Los síntomas pueden variar desde leves hasta graves e incluyen urticaria, picazón, hinchazón de los labios, lengua o garganta, dificultad para respirar, dolor abdominal, vómitos, diarrea y, en casos severos, anafilaxia, que es una reacción potencialmente mortal que requiere atención médica inmediata. Fuente: American College of Allergy, Asthma & Immunology, \"Food Allergy,\" 2020. [Online]. Available: https://acaai.org/allergies/allergic-conditions/food/";
                } else if (faqDefinicion == "alimentos"){
                    return "Los alimentos más comunes que causan alergias incluyen la leche, el huevo, el pescado, los mariscos, los frutos secos (como almendras y nueces), el cacahuate, el trigo y la soya. Fuente: World Health Organization, \"Food Allergens,\" 2020. [Online]. Available: https://www.who.int/news-room/fact-sheets/detail/food-allergens";
                } else if (faqDefinicion == "alergia"){
                    return "La alergia se define como una reacción anormal del organismo debido a que responde de manera exagerada cuando entra en contacto con una sustancia procedente del exterior.  Fuente: Hospital Quirónsalud Toledo, \"Alergología,\" Hospital Quirónsalud Toledo, 2024. [Online]. Available: https://www.quironsalud.com.";
                } else if (faqDefinicion == "reaccion" || faqDefinicion == "alergica" ){
                    return "En caso de una reacción alérgica severa, es crucial administrar una inyección de epinefrina (si está disponible) y buscar atención médica inmediata. La anafilaxia es una emergencia médica que puede ser fatal si no se trata rápidamente. Fuente: National Institute of Allergy and Infectious Diseases, \"Anaphylaxis,\" 2020. [Online]. Available: https://www.niaid.nih.gov/diseases-conditions/anaphylaxis";
                } else {
                    return "No cuento con información sobre ese tema.";
                }
            } else {
                return "No pude entender tu solicitud.";
            }
    }

    function buscarPorDulceYAlergeno(nombreDulce, alergenosEvitar) {
    const dulceObj = dulces.find(d => d.nombre === nombreDulce);
    if (!dulceObj) return "Dulce no encontrado.";

    // Asegura que las categorías se manejen como listas
    const categoriasDulce = Array.isArray(dulceObj.categoria) ? dulceObj.categoria : [dulceObj.categoria];

    // Filtra los dulces que coincidan en categoría y no contengan los alérgenos especificados
    let resultados = dulces.filter(dulce => {
        const categoriasCandidato = Array.isArray(dulce.categoria) ? dulce.categoria : [dulce.categoria];
        const coincideCategoria = categoriasDulce.some(cat => categoriasCandidato.includes(cat));
        const contieneAlergeno = alergenosEvitar.some(alergeno => dulce.alergenos.includes(alergeno));
        return coincideCategoria && !contieneAlergeno;
    }).map(d => d.nombre);

    return resultados.length ? `Los dulces sustitutos de la misma categoria del dulce ${nombreDulce} son: ${resultados.join(', ')}` : "No se encontraron sustitutos.";
}

    function buscarPorAlergeno(alergenosEvitar) {
        console.log("Entro aqui x2");
        return buscarDulces(null, alergenosEvitar);
    }

    function buscarPorCategoriaYAlergeno(categoria, alergenosEvitar) {
        return buscarDulces(categoria, alergenosEvitar);
    }
    
    function buscarAlternativasPorDulce(nombreDulce) {
    const dulceObj = dulces.find(d => d.nombre === nombreDulce);
    if (!dulceObj) return "Dulce no encontrado.";

    const alergenosDulce = dulceObj.alergenos;
    const categoriaDulce = dulceObj.categoria;

    // Si no tiene alérgenos, informa que el usuario puede consumirlo.
    if (alergenosDulce.length === 0) {
        return `El dulce ${nombreDulce} no tiene alérgenos conocidos y puedes consumirlo sin problemas.`;
    }

    let resultados = dulces.filter(dulce => {
        return dulce.categoria.some(cat => categoriaDulce.includes(cat)) && 
               !alergenosDulce.some(alergeno => dulce.alergenos.includes(alergeno));
    }).map(d => d.nombre);

    let mensajeAlergenos = `Los alérgenos que contiene el dulce son: ${alergenosDulce.join(', ')}.`;
    let mensajeResultados = resultados.length ? `Otros dulces recomendados: ${resultados.join(', ')}` : `No se encontraron sustitutos de la misma categoría de ${nombreDulce} sin esos alérgenos.`;

    return `${mensajeAlergenos} ${mensajeResultados}`;
}


    //Modificar funcion buscarAlternativasPorDulce para ademas de dar alternativas por categoria

    function buscarDulces(categoria, alergenosEvitar) {
        let resultados = dulces.filter(dulce => {
            const cumpleCategoria = categoria ? dulce.categoria.includes(categoria) : true;
            const cumpleAlergenos = !alergenosEvitar.some(alergeno => dulce.alergenos.includes(alergeno));
            return cumpleCategoria && cumpleAlergenos;
        }).map(d => d.nombre);
        return resultados.length ? `Los dulces sustitutos son: ${resultados.join(', ')}` : "No se encontraron sustitutos.";
    }

    function listarAlergenos(nombreDulce) {
        const dulce = dulces.find(d => d.nombre === nombreDulce);
        if (dulce) {
            return dulce.alergenos.length ? `Los alérgenos que contiene el dulce ${nombreDulce} son: ${dulce.alergenos.join(', ')}.` : "Este dulce no tiene alérgenos conocidos.";
        }
        return "Dulce no encontrado en la base de datos.";
    }

    function estadisticaAlergia(gradoAlergia, alergiasData) {
    const alergenos = alergiasData.alergeno;
    const cantidades = alergiasData.cantidad;

    if (alergenos.length !== cantidades.length) {
        return "Los datos de alérgenos y cantidades no coinciden, por lo que no puedo darte una respuesta.";
    }

    let indicesResultado = [];

    if (gradoAlergia === "mas") {
        const maxCantidad = Math.max(...cantidades);
        cantidades.forEach((cantidad, index) => {
            if (cantidad === maxCantidad) {
                indicesResultado.push(index);
            }
        });
    } else if (gradoAlergia === "menos") {
        const minCantidad = Math.min(...cantidades);
        cantidades.forEach((cantidad, index) => {
            if (cantidad === minCantidad) {
                indicesResultado.push(index);
            }
        });
    } else {
        return "No se especificó correctamente la pregunta, por lo que no puedo darte una respuesta.";
    }

    if (indicesResultado.length === 0) {
        return "No se encontraron datos con los criterios especificados.";
    }

    // Construir mensaje con singular o plural adecuado
    const esPlural = indicesResultado.length > 1;
    const articulo = esPlural ? "Las" : "La";
    const alergenoTexto = esPlural ? "alergias" : "alergia";
    const casoTexto = esPlural ? "son" : "es";
    const casoTextoTres = esPlural ? "comunes" : "comun";

    const mensajeAlergenos = indicesResultado.map(index => `${alergenos[index]} con ${cantidades[index]} ${cantidades[index] == 1 ? "incidencia": "incidencias"}`).join(", ");
    const mensajeFinal = `${articulo} ${alergenoTexto} ${gradoAlergia === "mas" ? "más" : "menos"} ${casoTextoTres} en Doneet ${casoTexto}: ${mensajeAlergenos}.`;

    return mensajeFinal;
}

    function estadisticaAlergiaAlergeno(alergeno, alergiasData) {
    const index = alergiasData.alergeno.findIndex(a => a.toLowerCase() === alergeno.toLowerCase());
    if (index === -1) {
        return `No hay datos disponibles para el alérgeno buscado: ${alergeno}.`;
    }
    return `El alérgeno ${alergeno} tiene ${alergiasData.cantidad[index]} ${alergiasData.cantidad[index] == 1 ? "incidencia":"incidencias"} ${alergiasData.cantidad[index] == 1 ? "reportada":"reportadas"} en Doneet.`;
}

    function estadisticaDulce(grado, dulcesData) {
    const dulces = dulcesData.dulces;
    const numeros = dulcesData.numero;

    if (dulces.length !== numeros.length) {
        return "Los datos de alérgenos y cantidades no coinciden, por lo que no puedo darte una respuesta.";
    }

    let indicesResultado = [];
    let mensajeFinal;

    if (grado === "mas") {
        const maxNumero = Math.max(...numeros);
        numeros.forEach((numero, index) => {
            if (numero === maxNumero) {
                indicesResultado.push(index);
            }
        });
    } else if (grado === "menos") {
        const minNumero = Math.min(...numeros);
        numeros.forEach((numero, index) => {
            if (numero === minNumero) {
                indicesResultado.push(index);
            }
        });
    } else {
        return "No hay datos disponibles de los dulces en Doneet.";
    }

    if (indicesResultado.length === 0) {
        return "No se encontraron dulces con los criterios especificados.";
    }

    // Construir mensaje con singular o plural adecuado
    const esPlural = indicesResultado.length > 1;
    const dulceTexto = esPlural ? "dulces" : "dulce";
    const verb = esPlural ? "presentan" : "presenta";
    const articulo = esPlural ? "Los" : "El";

    const nombresDulces = indicesResultado.map(index => `${dulces[index]}`).join(", ");
    const numeroReportes = numeros[indicesResultado[0]]; // Todos tendrán el mismo número de reportes

    mensajeFinal = `${articulo} ${dulceTexto}: ${nombresDulces} ${verb} ${numeroReportes} reportes en Doneet.`;

    return mensajeFinal;
}

function estadisticaDulceEspecifico(nombreDulce, dulcesData) {
    const index = dulcesData.dulces.findIndex(dulce => dulce.toLowerCase() === nombreDulce.toLowerCase());
    if (index === -1) {
        return `No hay datos disponibles para el dulce buscado: "${nombreDulce}".`;
    }
    return `El dulce ${nombreDulce} tiene ${dulcesData.numero[index]} reportes en Doneet.`;
}

function estadisticaValoracion(gradoAlergia, valoracionesData) {
    const dulces = valoracionesData.dulces;
    const valoraciones = valoracionesData.valoracion.map(Number); // Convertir a números para comparaciones

    if (dulces.length !== valoraciones.length) {
        return "Los datos de dulces y valoraciones no coinciden.";
    }

    let indiceResultado;
    if (gradoAlergia === "mas" || gradoAlergia === "mejor") {
        indiceResultado = valoraciones.indexOf(Math.max(...valoraciones));
    } else if (gradoAlergia === "menos" || gradoAlergia === "peor") {
        indiceResultado = valoraciones.indexOf(Math.min(...valoraciones));
    } else {
        return "No se especificó correctamente el grado de valoración.";
    }

    return `El dulce ${dulces[indiceResultado]} tiene una valoración de ${valoraciones[indiceResultado]} de 5, por lo tanto es ${gradoAlergia === "mas" || gradoAlergia === "mejor" ? "más" : "menos"} recomendado por los usuarios.`;
}

function estadisticaValoracionEspecifico(nombreDulce, valoracionesData) {
    const index = valoracionesData.dulces.findIndex(dulce => dulce.toLowerCase() === nombreDulce.toLowerCase());
    if (index === -1) {
        return `No hay datos disponibles para el dulce buscado: "${nombreDulce}".`;
    }
    return `El dulce "${nombreDulce}" tiene una valoración de ${valoracionesData.valoracion[index]} de 5 por los usuarios.`;
}

function cantidadDulcesCategoria(categoria) {
    const item = cantidadDulces.find(item => item.categoria.toLowerCase() === categoria.toLowerCase());
    if (!item) {
        return `No hay datos disponibles para la categoría buscada: "${categoria}".`;
    }
    return `Hay ${item.cantidad} ${categoria} en Doneet.`;
}

function cantidadDulcesTotal() {
    const total = cantidadDulces.reduce((sum, item) => sum + item.cantidad, 0);
    const detalleCategorias = cantidadDulces.map(item => `${item.categoria}: ${item.cantidad}`).join(", ");
    return `Total de dulces en Doneet: ${total}. Detalle por categoría: ${detalleCategorias}.`;
}







    function mostrarRespuesta(mensajes) {
    mensajes.forEach((mensaje, index) => {
        setTimeout(() => {
            const respuestaMessage = document.createElement('div');
            respuestaMessage.className = 'message bot-message typing';
            //respuestaMessage.style.minHeight = 'auto';
            chatMessages.appendChild(respuestaMessage);
            let i = 0;
            const speed = 30; // Velocidad de escritura en milisegundos

            function typeWriter() {
                if (i < mensaje.length) {
                    respuestaMessage.innerHTML += mensaje.charAt(i);
                    i++;
                    // Establecer minHeight a 50px al inicio o mantenerlo si ya es mayor
                    respuestaMessage.style.minHeight = Math.max(respuestaMessage.scrollHeight, 50) + 'px';
                    setTimeout(typeWriter, speed);
                } else {
                    respuestaMessage.classList.remove('typing');
                    respuestaMessage.style.minHeight = 'auto';
                }
                  // Ajusta el tamaño del contenedor a medida que el texto crece
                chatMessages.scrollTop = chatMessages.scrollHeight;  // Mantiene el scroll en la parte más baja
            }
            typeWriter();
        }, 1000 * index);
    });
}

});
</script>

</body>

</html>